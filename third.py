# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'third.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtGui import QPixmap
from building import *
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QLineEdit, QVBoxLayout, QPushButton


class child2():
    def setupUi(self, MainWindow1):
        MainWindow1.setObjectName("MainWindow")
        MainWindow1.resize(650, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow1)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(250, 80, 113, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(250, 150, 113, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(250, 210, 113, 21))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(250, 270, 113, 21))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_5.setGeometry(QtCore.QRect(250, 330, 113, 21))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(71, 80, 111, 20))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(71, 150, 111, 20))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(81, 210, 101, 20))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(101, 270, 81, 20))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(101, 330, 81, 20))
        self.label_5.setObjectName("label_5")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(470, 370, 93, 28))
        self.pushButton.setObjectName("pushButton")
        MainWindow1.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow1)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 650, 26))
        self.menubar.setObjectName("menubar")
        MainWindow1.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow1)
        self.statusbar.setObjectName("statusbar")
        MainWindow1.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow1)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "环境配置"))
        self.label.setText(_translate("MainWindow", "建筑中心坐标X："))
        self.label_2.setText(_translate("MainWindow", "建筑中心坐标Y："))
        self.label_3.setText(_translate("MainWindow", "建筑长半值L："))
        self.label_4.setText(_translate("MainWindow", "建筑宽度W："))
        self.label_5.setText(_translate("MainWindow", "建筑高度H："))
        self.pushButton.setText(_translate("MainWindow", "OK"))

    def get_inputs(self):
        # 获取输入框的内容
        return self.lineEdit.text(), self.lineEdit_2.text(), self.lineEdit_3.text(), self.lineEdit_4.text(), self.lineEdit_5.text()


# class InputDialog_2(QDialog):
#     def __init__(self, parent=None):
#         super(InputDialog_2, self).__init__(parent)
#         self.setWindowTitle('目标点及出发点设置')
#         self.setFixedSize(300, 400)
#         self.inputs = []
#
#         # 创建输入框
#         self.input1 = QLineEdit()
#         self.input1.setPlaceholderText('请输入目标点的坐标X')
#         self.input2 = QLineEdit()
#         self.input2.setPlaceholderText('请输入目标点的坐标Y')
#         self.input3 = QLineEdit()
#         self.input3.setPlaceholderText('请输入目标点的坐标Z')
#         self.input4 = QLineEdit()
#         self.input4.setPlaceholderText('请输入出发点的坐标X')
#         self.input5 = QLineEdit()
#         self.input5.setPlaceholderText('请输入出发点的坐标Y')
#         self.input6 = QLineEdit()
#         self.input6.setPlaceholderText('请输入出发点的坐标Z')
#
#         # 创建布局并添加输入框
#         layout = QVBoxLayout()
#
#         layout.addWidget(self.input1)
#         layout.addWidget(self.input2)
#         layout.addWidget(self.input3)
#         layout.addWidget(self.input4)
#         layout.addWidget(self.input5)
#         layout.addWidget(self.input6)
#         # self.inputs.append(int(self.input1.text()))
#         # self.inputs.append(int(self.input2.text()))
#         # self.inputs.append(int(self.input3.text()))
#         # self.inputs.append(int(self.input4.text()))
#         # self.inputs.append(int(self.input5.text()))
#         # self.inputs.append(int(self.input6.text()))
#         # 创建确认按钮
#         self.button_ok = QPushButton('确认')
#         self.button_ok.clicked.connect(self.accept)  # 接受输入
#         layout.addWidget(self.button_ok)
#
#         # 设置窗口的布局
#         self.setLayout(layout)
#
#
#     def get_inputs(self):
#         # 获取输入框的内容
#         return self.input1.text(), self.input2.text(), self.input3.text(), self.input4.text(), self.input5.text(), self.input6.text()
# def function1(self):
#         len = 100
#         width = 100
#         h = 22
#         map = np.zeros((len, width, h))
#         bds = []
#
#         class building():
#             def __init__(self, x, y, l, w, h):
#                 self.x = x  # 建筑中心x坐标
#                 self.y = y  # 建筑中心y坐标
#                 self.l = l  # 建筑长半值
#                 self.w = w  # 建筑宽半值
#                 self.h = h  # 建筑高度
#
#         for i in range(5):
#             bds.append(building(random.randint(10, len - 10), random.randint(10, width - 10), random.randint(1, 10),
#                                 random.randint(1, 10), random.randint(9, 13)))
#             map[bds[i].x - bds[i].l:bds[i].x + bds[i].l,bds[i].y - bds[i].w:bds[i].y + bds[i].w, 0:bds[i].h] = 1
#         fig = plt.figure()
#         ax = fig.add_subplot(111, projection='3d')
#         for ob in bds:
#             # 绘画出所有建筑
#             x = ob.x
#             y = ob.y
#             z = 0
#             dx = ob.l
#             dy = ob.w
#             dz = ob.h
#             xx = np.linspace(x - dx, x + dx, 2)
#             yy = np.linspace(y - dy, y + dy, 2)
#             zz = np.linspace(z, z + dz, 2)
#
#             xx2, yy2 = np.meshgrid(xx, yy)
#
#             ax.plot_surface(xx2, yy2, np.full_like(xx2, z))
#             ax.plot_surface(xx2, yy2, np.full_like(xx2, z + dz))
#
#             yy2, zz2 = np.meshgrid(yy, zz)
#             ax.plot_surface(np.full_like(yy2, x - dx), yy2, zz2)
#             ax.plot_surface(np.full_like(yy2, x + dx), yy2, zz2)
#
#             xx2, zz2 = np.meshgrid(xx, zz)
#             ax.plot_surface(xx2, np.full_like(yy2, y - dy), zz2)
#             ax.plot_surface(xx2, np.full_like(yy2, y + dy), zz2)
#         plt.savefig('1.jpg')
#         plt.show()
#         # 加载图片
#         pixmap = QPixmap("1.jpg")
#
#         self.label.setPixmap(pixmap)
#
#         self.inputs2 = []
    #     dialog = InputDialog_3()
    #     if dialog.exec_() == dialog.Accepted:
    #         print('输入框1:', dialog.get_inputs()[0])
    #         print('输入框2:', dialog.get_inputs()[1])
    #         print('输入框3:', dialog.get_inputs()[2])
    #         print('输入框4:', dialog.get_inputs()[3])
    #         print('输入框5:', dialog.get_inputs()[4])
    #
    #
    #     bds.append(building(int(dialog.get_inputs()[0]), int(dialog.get_inputs()[1]), int(dialog.get_inputs()[2]), int(dialog.get_inputs()[3]), int(dialog.get_inputs()[4])))
    #     # self.temp.append((building(self.inputs2[0],self.inputs2[1],self.inputs2[2],self.inputs2[3],self.inputs2[4])))
    #     # bds = []
    #     # for i in self.temp:
    #     #     bds.append(i)
    #     # # for i in range(1):
    #     # #     map[bds[i].x - bds[i].l:bds[i].x + bds[i].l, bds[i].y - bds[i].w:bds[i].y + bds[i].w, 0:bds[i].h] = 1
    #     print(bds)
    #     for ob in bds:
    #         # 绘画出所有建筑
    #         x = ob.x
    #         y = ob.y
    #         z = 0
    #         dx = ob.l
    #         dy = ob.w
    #         dz = ob.h
    #         xx = np.linspace(x - dx, x + dx, 2)
    #         yy = np.linspace(y - dy, y + dy, 2)
    #         zz = np.linspace(z, z + dz, 2)
    #
    #         xx2, yy2 = np.meshgrid(xx, yy)
    #
    #         ax.plot_surface(xx2, yy2, np.full_like(xx2, z))
    #         ax.plot_surface(xx2, yy2, np.full_like(xx2, z + dz))
    #
    #         yy2, zz2 = np.meshgrid(yy, zz)
    #         ax.plot_surface(np.full_like(yy2, x - dx), yy2, zz2)
    #         ax.plot_surface(np.full_like(yy2, x + dx), yy2, zz2)
    #
    #         xx2, zz2 = np.meshgrid(xx, zz)
    #         ax.plot_surface(xx2, np.full_like(yy2, y - dy), zz2)
    #         ax.plot_surface(xx2, np.full_like(yy2, y + dy), zz2)
    #     plt.savefig('2.jpg')
    #
    #     # 加载图片
    #     pixmap = QPixmap("2.jpg")
    #     # 显示图片
    #     self.label.setPixmap(pixmap)
    #     # 自适应大小
    #
    #
    #     self.inputs2 = []
    #     dialog = InputDialog_3()
    #     if dialog.exec_() == dialog.Accepted:
    #         print('输入框1:', dialog.get_inputs()[0])
    #         print('输入框2:', dialog.get_inputs()[1])
    #         print('输入框3:', dialog.get_inputs()[2])
    #         print('输入框4:', dialog.get_inputs()[3])
    #         print('输入框5:', dialog.get_inputs()[4])
    #
    #     bds.append(building(int(dialog.get_inputs()[0]), int(dialog.get_inputs()[1]), int(dialog.get_inputs()[2]),
    #                         int(dialog.get_inputs()[3]), int(dialog.get_inputs()[4])))
    #     # self.temp.append((building(self.inputs2[0],self.inputs2[1],self.inputs2[2],self.inputs2[3],self.inputs2[4])))
    #     # bds = []
    #     # for i in self.temp:
    #     #     bds.append(i)
    #     # # for i in range(1):
    #     # #     map[bds[i].x - bds[i].l:bds[i].x + bds[i].l, bds[i].y - bds[i].w:bds[i].y + bds[i].w, 0:bds[i].h] = 1
    #     print(bds)
    #     for ob in bds:
    #         # 绘画出所有建筑
    #         x = ob.x
    #         y = ob.y
    #         z = 0
    #         dx = ob.l
    #         dy = ob.w
    #         dz = ob.h
    #         xx = np.linspace(x - dx, x + dx, 2)
    #         yy = np.linspace(y - dy, y + dy, 2)
    #         zz = np.linspace(z, z + dz, 2)
    #
    #         xx2, yy2 = np.meshgrid(xx, yy)
    #
    #         ax.plot_surface(xx2, yy2, np.full_like(xx2, z))
    #         ax.plot_surface(xx2, yy2, np.full_like(xx2, z + dz))
    #
    #         yy2, zz2 = np.meshgrid(yy, zz)
    #         ax.plot_surface(np.full_like(yy2, x - dx), yy2, zz2)
    #         ax.plot_surface(np.full_like(yy2, x + dx), yy2, zz2)
    #
    #         xx2, zz2 = np.meshgrid(xx, zz)
    #         ax.plot_surface(xx2, np.full_like(yy2, y - dy), zz2)
    #         ax.plot_surface(xx2, np.full_like(yy2, y + dy), zz2)
    #     plt.savefig('2.jpg')
    #
    #     # 加载图片
    #     pixmap = QPixmap("2.jpg")
    #     # 显示图片
    #     self.label.setPixmap(pixmap)
    #     # 自适应大小

# class InputDialog_3(QDialog):
#         def __init__(self, parent=None):
#             super(InputDialog_3, self).__init__(parent)
#             self.setWindowTitle('环境配置')
#             self.setFixedSize(300, 400)
#             self.inputs = []
#
#
#
#             # 创建布局并添加输入框
#             layout = QGridLayout()
#
#             layout.addWidget(self.input1)
#             layout.addWidget(self.input2)
#             layout.addWidget(self.input3)
#             layout.addWidget(self.input4)
#             layout.addWidget(self.input5)
#
#             # 创建确认按钮
#             self.button_ok = QPushButton('确认')
#             self.button_ok.clicked.connect(self.accept)  # 接受输入
#             layout.addWidget(self.button_ok)
#
#             # 设置窗口的布局
#             self.setLayout(layout)
#
#         def get_inputs(self):
#             # 获取输入框的内容
#             return self.input1.text(), self.input2.text(), self.input3.text(), self.input4.text(), self.input5.text()
